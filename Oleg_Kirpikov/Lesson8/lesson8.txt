1.  можно использовать замыкание чтобы оформить игру в качестве библиотеки тогда при вызове игры в составе другого проекта
    имена переменных не будут пересекаться

2.
a. 
    if (!("a" in window)) {
        var a = 1;
    }
    alert(a);

Ответ: undefined тк var объявляет тут переменную в  глобальном контексте

b.
    var b = function a(x) {
        x && a(--x);
    };
    alert(a);
Ответ: undefined тк функция используется как значение 

c.
    function a(x) {
        return x * 2;
    }
    var a;
    alert(a);

Ответ: "function a(x) {  return x * 2;  }"  нет вызова функции a()


d.
    function b(x, y, a) {
        arguments[2] = 10;
        alert(a);
    }
    b(1, 2, 3);

Ответ: 10 тк arguments массив аргументов функции начинается с нуля

e.
    function a() {
        alert(this);
    }
    a.call(null);

Ответ: локальный this=null те не определен поэтому поднимаясь вверх на уровень получаем глобальный this те window