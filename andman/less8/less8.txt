1)В практикуме из 7 урока можно применить замыкания для защиты переменных в config-е. Также, можно применить вместо bind в Game.start()
 //Запуск игры
    start() {
        if (this.status.isPaused()) {
            this.status.setPlaying();
            //this.timer = setInterval(this.doTick.bind(this), 1000 / this.settings.speed);
            this.timer = setInterval( () => this.doTick() , 1000 / this.settings.speed);

        }
    }


2a) "undefined", т к переменная "a"  будет объявлена до выполнения кода, как глобальная (в объекте "window") . Условие !("a" in window) ложное и присвоение 1 не произойдет.

2b) Ошибка "переменная a не определена". Она за пределами видимости , т к используется внутри функциоанального выражения как имя функции. Вывечти его можно, например так
var b = function a(x) {
    x && a(--x);
    alert(a);
};
b();

2c) Вернётся содержимое функции. Ошибки не будет. Объявление переменной через var может быть после присваивания, в данном случае после объявления функции.

2d) "10" т к через массив arguments[] мы получаем доступ к аргументам функции. Переменая a передается 3-й по счету и находится в элементе массива под индексом 2, значение которого переопределяется в 10.

2e)Думал, что вернёт null, но вернулся объект window, если указать  строгий режим 'use strict', то возвращает null.
